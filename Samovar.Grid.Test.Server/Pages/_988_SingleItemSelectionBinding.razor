@page "/_988_SingleItemSelectionBinding"

@using System.Linq

@using Samovar.Grid.Test.Server.Components

@inject WeatherForecastService ForecastService

<h1>Single Item Selection Binding</h1>

<div class="form-group">
    <label class="mr-2">Set selection</label>
    <input type="number" @onchange="SetSelection" />
</div>
<div><b>Selected item: </b>@selectedItem?.Summary</div>
<div>
    @{
        if (grid != null && grid.SingleSelectedDataRow != null)
        {
            <div><b>Selected item Grid-Property: </b>@grid.SingleSelectedDataRow.Summary</div>
        }
        else
        {
            <div><b>Selected item Grid-Property: </b>NULL</div>
        }
    }
</div>
<div><button @onclick="()=> { StateHasChanged(); }">refresh</button></div>
<SamovarGrid Data="@forecasts"
             SingleSelectedDataRow="@selectedItem"
             SingleSelectedDataRowChanged="@OnSelectedProductChanged"
             OrderFieldByDefault="@nameof(WeatherForecast.TemperatureC)"
             OrderDesc="true"
             PageSize="25"
             Height="@gridHeight"
             PagerSize="10"
             SelectedRowClass="bg-warning" FilterMode="@GridFilterMode.FilterRow" @ref="grid">
    <GridColumns>
        <GridColumn Field="@nameof(WeatherForecast.WeatherReportCreater)" Title="Creater" />
        <GridColumn Title="Status" Width="38px">
            <CellShowTemplate>
                @{
                    WeatherForecast data = context as WeatherForecast;
                    if (data.Position < 10)
                    {
                        <div class="status-red"></div>
                    }
                    else if (data.Position < 20)
                    {
                        <div class="status-yellow"></div>
                    }
                    else
                    {
                        <div class="status-green"></div>
                    }
                }
            </CellShowTemplate>
        </GridColumn>
        <GridColumn Title="Pos" Field="@nameof(WeatherForecast.Position)" Width="100px" />
        <GridColumn Title="Date" Field="@nameof(WeatherForecast.Date)" Width="100px">
            <CellShowTemplate>
                @{
                    WeatherForecast data = context as WeatherForecast;
                    <MyCellTemplate Id="data.Position" />
                }
            </CellShowTemplate>
            <CellEditTemplate>

            </CellEditTemplate>
        </GridColumn>
        <GridColumn Title="Date2" Field="@nameof(WeatherForecast.Date)" Width="100px" />
        <GridColumn Title="TemperatureC" Field="@nameof(WeatherForecast.TemperatureC)" Width="100px" />
        <GridColumn Title="TemperatureF" Field="@nameof(WeatherForecast.TemperatureF)" Width="100px" />
        <GridColumn Title="Summary" Field="@nameof(WeatherForecast.Summary)" Width="100px">
            <CellEditTemplate>
                @{
                    WeatherForecast data = context as WeatherForecast;
                    <input style="width:100%;" type="text" @bind="@data.Summary" @oninput="onInput" />

                    void onInput(ChangeEventArgs args)
                    {
                    }

                }
            </CellEditTemplate>
            <CellShowTemplate>
                @{
                    WeatherForecast data = context as WeatherForecast;
                    <div style="word-break:break-all;">@data.Summary</div>
                }
            </CellShowTemplate>
        </GridColumn>
        <GridColumn Title="SummaryStd" Field="@nameof(WeatherForecast.Summary)" Width="100px" />
        <GridColumn Title="SummaryDbl" Field="@nameof(WeatherForecast.SummaryDbl)" Width="100px" />
        <GridColumn Title="SummaryDblNull" Field="@nameof(WeatherForecast.SummaryDblNullable)" Width="100px" />
        <GridColumn Title="Boolean" Field="@nameof(WeatherForecast.YesNo)" Width="100px" />
        <GridColumn Title="SByte" Field="@nameof(WeatherForecast.SByteValue)" Width="100px" />
        <GridColumn Title="Char" Field="@nameof(WeatherForecast.CharValue)" Width="100px" />
        <GridCommandColumn Width="110px">
            
            
        </GridCommandColumn>
    </GridColumns>
</SamovarGrid>

@code{
    string gridHeight = "600px";

    List<WeatherForecast> forecasts = new List<WeatherForecast>();
    SamovarGrid<WeatherForecast> grid { get; set; }

    WeatherForecast selectedItem { get; set; }
    protected override async Task OnInitializedAsync()
    {
        forecasts = (await ForecastService.GetForecastAsync(DateTime.Now, 500)).ToList();
        selectedItem = forecasts.First();
    }

    void SetSelection(ChangeEventArgs args)
    {
        int itemIndex = (int.Parse((string)args.Value)) - 1;
        if (itemIndex < 0 || itemIndex > forecasts.Count() - 1)
        {
            selectedItem = null;
            return;
        }

        selectedItem = forecasts[itemIndex];
    }

    protected void OnSelectedProductChanged(WeatherForecast forecast)
    {

    }

}