@page "/_011_SingleItemSelection"

@using System.Linq

@using Samovar.Grid.Test.Server.Components

@inject WeatherForecastService ForecastService

<h1>Single Item Selection Binding. Grid Prop.</h1>

<div><b>Selected item: </b>@SelectedItem?.Summary</div>

<div class="form-group">
    <label class="mr-2">Set selection</label>
    <input type="number" @onchange="SetSelection" />
</div>

<SamovarGrid Data="@forecasts"
             SelectionMode="GridSelectionMode.SingleSelectedDataRow"
             @bind-SingleSelectedDataRow="SelectedItem"
             PageSize="25"
             Height="600px"
             PagerSize="10"
             SelectedRowClass="bg-warning" 
             FilterMode="@GridFilterMode.FilterRow" 
             @ref="grid">
    <GridColumns>
        <GridCommandColumn Width="110px" />

        <GridColumn Title="Pos" Field="@nameof(WeatherForecast.Position)" />
        <GridColumn Title="Date" Field="@nameof(WeatherForecast.Date)" />
        <GridColumn Title="TemperatureC" Field="@nameof(WeatherForecast.TemperatureC)" />
        <GridColumn Title="TemperatureF" Field="@nameof(WeatherForecast.TemperatureF)" />
        <GridColumn Title="Summary" Field="@nameof(WeatherForecast.Summary)" />
    </GridColumns>
</SamovarGrid>

@code{
    List<WeatherForecast> forecasts = new List<WeatherForecast>();
    SamovarGrid<WeatherForecast> grid { get; set; }
    WeatherForecast selectedItem;

    WeatherForecast SelectedItem { get => selectedItem; set { selectedItem = value; InvokeAsync(StateHasChanged); } }

    protected override async Task OnInitializedAsync()
    {
        forecasts = (await ForecastService.GetForecastAsync(DateTime.Now, 500)).ToList();
    }

    void SetSelection(ChangeEventArgs args)
    {
        int pos = int.Parse((string)args.Value);
        SelectedItem = forecasts.SingleOrDefault(x => x.Position == pos);
    }
}