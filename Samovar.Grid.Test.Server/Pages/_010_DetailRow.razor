@page "/_010_DetailRow"
@using System.Linq

@inject WeatherForecastService ForecastService

<h1>Events</h1>
<h3>Filter counter @filtered.ToString()</h3>
<h3>Sort column @lastSortColumn</h3>
<h3>New page number @newPage</h3>
<SamovarGrid Data="@forecasts"
             OrderFieldByDefault="@nameof(WeatherForecast.TemperatureC)"
             OrderDesc="true"
             PageSize="25"
             SelectedRowClass="bg-warning"
             FilterMode="@GridFilterMode.FilterRow"
             AfterFilter="AfterFilter"
             AfterSort="AfterSort"
             AfterPageChange="AfterPageChange" Height="600px" ShowDetailRow="true">
    <GridColumns>
        <GridColumn Title="Pos" Field="@nameof(WeatherForecast.Position)" />
        <GridColumn Title="Date" Field="@nameof(WeatherForecast.Date)" />
        <GridColumn Title="TemperatureC" Field="@nameof(WeatherForecast.TemperatureC)" />
        <GridColumn Title="TemperatureF" Field="@nameof(WeatherForecast.TemperatureF)" />
        <GridCommandColumn Width="110px" />
    </GridColumns>
    <DetailRowTemplate Context="mydata">
        @{
            WeatherForecast data = mydata as WeatherForecast;
                <div>
                    <SamovarGrid Data="@forecasts"
                                 OrderFieldByDefault="@nameof(WeatherForecast.TemperatureC)"
                                 OrderDesc="true"
                                 PageSize="10"
                                 PagerSize="10"
                                 SelectedRowClass="my-selected-row-color">
                        <GridColumns>
                            <GridColumn Title="Date" Field="@nameof(WeatherForecast.Date)" />
                            <GridColumn Title="TemperatureC" Field="@nameof(WeatherForecast.TemperatureC)" />
                            <GridColumn Title="Summary" Field="@nameof(WeatherForecast.Summary)" />
                        </GridColumns>
                    </SamovarGrid>
                </div>
        }
    </DetailRowTemplate>
</SamovarGrid>

@code{
    List<WeatherForecast> forecasts = new List<WeatherForecast>();

    protected override async Task OnInitializedAsync()
    {
        forecasts = (await ForecastService.GetForecastAsync(DateTime.Now, 1000)).ToList();
    }

    int filtered;
    string lastSortColumn;
    int newPage;


    void AfterFilter(GridFilterEventArgs args)
    {
        filtered++;
    }

    void AfterSort(GridSortEventArgs args)
    {
        lastSortColumn = args.SortColumn;
    }

    void AfterPageChange(GridPagingEventArgs args)
    {
        newPage = args.NewPageNumber;
    }
}