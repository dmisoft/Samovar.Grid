@page "/_012_MultipleItemSelection"

@using System.Linq

@using Samovar.Grid.Test.Server.Components

@inject WeatherForecastService ForecastService

<h1>Multiple Item Selection Binding</h1>

<div class="form-group">
    <label class="mr-2">Set selection (1 to x)</label>
    <input type="number" @onchange="SetSelection" />
</div>


<div><button @onclick="()=> { StateHasChanged(); }">refresh</button></div>
<div><button @onclick="GetViewCollection">view_collection</button></div>

<div class="row">
    <div class="col-10">
        <SamovarGrid Data="@forecasts"
                     SelectionMode="GridSelectionMode.MultipleSelectedDataRows"
                     @bind-MultipleSelectedDataRows="@SelectedItems"
                     PageSize="25"
                     Height="@gridHeight"
                     PagerSize="10"
                     SelectedRowClass="bg-warning" 
                     @ref="grid" >
            <GridColumns>
                <GridCommandColumn Width="110px" />

                <GridColumn Title="Pos" Field="@nameof(WeatherForecast.Position)" />
                <GridColumn Title="Date" Field="@nameof(WeatherForecast.Date)" />
                <GridColumn Title="TemperatureC" Field="@nameof(WeatherForecast.TemperatureC)" />
                <GridColumn Title="TemperatureF" Field="@nameof(WeatherForecast.TemperatureF)" />
                <GridColumn Title="Summary" Field="@nameof(WeatherForecast.Summary)" />
            </GridColumns>
        </SamovarGrid>
    </div>

    @if (selectedItems != null)
    {
        <div class="col-2">
            <div>
                @foreach (var dataRow in selectedItems)
                {
                    <div>@dataRow.Position @dataRow.Summary</div>
                }
            </div>
        </div>
    }
</div>

@code{
    string gridHeight = "600px";


    List<WeatherForecast> forecasts = new List<WeatherForecast>();
    SamovarGrid<WeatherForecast> grid { get; set; }


    IEnumerable<WeatherForecast> selectedItems;

    IEnumerable<WeatherForecast> SelectedItems
    {
        get { return selectedItems; }
        set
        {
            selectedItems = value;
            InvokeAsync(StateHasChanged);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        forecasts = (await ForecastService.GetForecastAsync(DateTime.Now, 500)).ToList();
    }

    void SetSelection(ChangeEventArgs args)
    {
        int take = int.Parse((string)args.Value);
        selectedItems = forecasts.Take(take).AsEnumerable();
    }

    void GetViewCollection()
    {
        var items = grid.ViewCollection;
    }
}