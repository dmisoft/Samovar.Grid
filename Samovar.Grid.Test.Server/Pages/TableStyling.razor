@page "/tablestyling"

@using System.Linq

@inject WeatherForecastService ForecastService

<h1>Table styling</h1>

<SamovarGrid Data="@forecasts"
             OrderFieldByDefault="@nameof(WeatherForecast.TemperatureC)"
             OrderDesc="true"
             PageSize="200"
             PagerSize="10"
             Height="600px"
             RowSelected="RowSelectedHandler"
             Headless="false"
             TableTagClass="table table-dark table-sm table-striped table-hover"
             TheadTagClass="thead-light"
             SelectedRowClass="my-selected-row-color">
    <GridColumns>
        <GridColumn Title="Date" Width="200px">
            <CellShowTemplate>
                @{
                    WeatherForecast data = context as WeatherForecast;
                    <div>@data.Date.ToShortDateString()</div>
                }
            </CellShowTemplate>
        </GridColumn>
        <GridColumn Title="TemperatureC" Field="@nameof(WeatherForecast.TemperatureC)" Width="200px" />
        <GridColumn Title="TemperatureF" Field="@nameof(WeatherForecast.TemperatureF)" Width="200px" />
        <GridColumn Title="Summary" Field="@nameof(WeatherForecast.Summary)" Width="200px" />
        <GridCommandColumn Width="110px" />
    </GridColumns>
</SamovarGrid>

<h4>Datasize</h4>
<div>@forecasts.Count()</div>

<h4>Action</h4>
<div>@selectedAction</div>

<h4>Action row item</h4>
<div>@actionItem</div>

@code{
    string selectedAction { set; get; }
    string actionItem { set; get; }

    List<WeatherForecast> forecasts;// = new List<WeatherForecast>();

    protected override async Task OnInitializedAsync()
    {
        forecasts = (await ForecastService.GetForecastAsync(DateTime.Now, 10000)).ToList();
    }

    void RowSelectedHandler(WeatherForecast data)
    {
        actionItem = data.Summary;
        selectedAction = "RowSelected";
    }

    void RowDeleteCommitHandler(GridRowEventArgs args)
    {
        actionItem = ((WeatherForecast)args.RowData).Summary;
        this.forecasts.Remove((WeatherForecast)args.RowData);
        selectedAction = "RowDeleteCommit";
    }
}