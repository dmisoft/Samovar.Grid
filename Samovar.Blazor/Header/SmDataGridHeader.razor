@using  System.Globalization
@typeparam TItem
@inherits SmDesignComponentBase

<table style="margin:0;border:0;table-layout:fixed; @(GridLayoutService.MinGridWidth.Value > 0 ? "min-width:" + GridLayoutService.MinGridWidth.Value.ToString(CultureInfo.InvariantCulture) + "px;" : "")" class="@GridLayoutService.TableTagClass.Value">
	<thead class="@GridLayoutService.TheadTagClass.Value">
		<tr>
			@{
				@if (GridLayoutService.ShowDetailRow.Value)
				{
					<th style="@(GridColumnService.DetailExpanderColumnModel.VisibleWidthStyle + "padding-right:0;")" id="@(GridColumnService.DetailExpanderColumnModel.VisibleGridColumnCellId)"></th>
				}

				<!--listing by column order only for column types Data and Command -->
				foreach (var colMeta in GridColumnService.AllColumnModels)
				{
					switch (colMeta.ColumnType)
					{
						case DataGridColumnType.Data:
							<SmDataGridHeaderCell Model=@((IDataColumnModel)colMeta) />
							break;
						case DataGridColumnType.Command:
							<th style="@(colMeta.VisibleWidthStyle)" id="@(colMeta.VisibleGridColumnCellId)">
								@if (((ICommandColumnModel)colMeta).NewButtonVisible.Value)
								{
									<div class="s-flex s-flex-row s-align-content-center s-justify-content-center">
										<button class="btn btn-primary btn-sm" @onclick="@RowInsering">new</button>
									</div>
								}
							</th>
							break;
					}
				}

				<th style="@(GridColumnService.EmptyColumnModel.VisibleWidthStyle)" id="@(GridColumnService.EmptyColumnModel.VisibleGridColumnCellId)"></th>
			}
		</tr>
	</thead>
</table>
