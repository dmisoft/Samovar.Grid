@using System.Globalization
@typeparam TItem
@inherits SmDesignComponentBase
@if (!PagingNavigationStrategy.PagerInfo.SubjectValue.Equals(DataGridPagerInfo.Empty))
{
	<table @ref="GridFooterRef" style="width:100%;" class="@LayoutService.TableTagClass.SubjectValue">
		<tfoot>
			<tr>
				<td>
					<div class="s-flex s-flex-row s-justify-content-between s-align-items-center">
						<div>
							<ul class="@LayoutService.PaginationClass.SubjectValue" style="margin:10px 0">
								@*<li class="page-item s-noselect" style="cursor:pointer;" @onclick=@(()=>DataGrid.SetPagerSize("back"))><a class="page-link">&laquo;</a></li>*@
								<li class="page-item s-noselect" style="cursor: pointer;" @onclick=@(async ()=>await PagingNavigationStrategy.NavigateToPreviousPage())><a class="page-link">&lsaquo;</a></li>
								@for (int i = PagingNavigationStrategy.PagerInfo.SubjectValue.StartPage; i <= PagingNavigationStrategy.PagerInfo.SubjectValue.EndPage; i++)
								{
									var currentPage = i;
									<li class="page-item s-noselect @(currentPage==PagingNavigationStrategy.PagerInfo.SubjectValue.CurrentPage?"active":"")" style="cursor: pointer;" @onclick=@(()=>PagingNavigationStrategy.NavigateToPage(currentPage))><a class="page-link">@currentPage</a></li>
								}
								<li class="page-item s-noselect" style="cursor: pointer;" @onclick=@(async ()=> await PagingNavigationStrategy.NavigateToNextPage())><a class="page-link">&rsaquo;</a></li>
								@*<li class="page-item s-noselect" style="cursor: pointer;" @onclick=@(()=>DataGrid.SetPagerSize("forward"))><a class="page-link">&raquo;</a></li>*@
							</ul>
						</div>
						<div>
							<span class="btn disabled">Page @PagingNavigationStrategy.PagerInfo.SubjectValue.CurrentPage of @PagingNavigationStrategy.PagerInfo.SubjectValue.TotalPages</span>
						</div>
					</div>
				</td>
			</tr>
		</tfoot>
	</table>
}